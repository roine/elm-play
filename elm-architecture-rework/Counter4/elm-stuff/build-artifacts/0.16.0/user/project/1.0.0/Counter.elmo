Elm.Counter = Elm.Counter || {};
Elm.Counter.make = function (_elm) {
   "use strict";
   _elm.Counter = _elm.Counter || {};
   if (_elm.Counter.values) return _elm.Counter.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var init = 0;
   var update = F2(function (action,model) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "NoOp": return model;
         case "Increment": return model + 1;
         default: return model - 1;}
   });
   var Context = F2(function (a,b) {    return {actions: a,remove: b};});
   var Decrement = {ctor: "Decrement"};
   var Increment = {ctor: "Increment"};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.div,_U.list([]),_U.list([$Html.text($Basics.toString(model))]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,address,Decrement)]),_U.list([$Html.text("-")]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,address,Increment)]),_U.list([$Html.text("+")]))]));
   });
   var viewWithContext = F2(function (context,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.div,_U.list([]),_U.list([$Html.text($Basics.toString(model))]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,context.actions,Decrement)]),_U.list([$Html.text("-")]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,context.actions,Increment)]),_U.list([$Html.text("+")]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,context.remove,{ctor: "_Tuple0"})]),_U.list([$Html.text("remove")]))]));
   });
   var NoOp = {ctor: "NoOp"};
   return _elm.Counter.values = {_op: _op
                                ,NoOp: NoOp
                                ,Increment: Increment
                                ,Decrement: Decrement
                                ,Context: Context
                                ,view: view
                                ,viewWithContext: viewWithContext
                                ,update: update
                                ,init: init};
};