Elm.Components = Elm.Components || {};
Elm.Components.Text = Elm.Components.Text || {};
Elm.Components.Text.make = function (_elm) {
   "use strict";
   _elm.Components = _elm.Components || {};
   _elm.Components.Text = _elm.Components.Text || {};
   if (_elm.Components.Text.values) return _elm.Components.Text.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Components$System = Elm.Components.System.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var view = F3(function (address,conf,currentValue) {
      var val = function () {    var _p0 = currentValue;if (_p0.ctor === "String") {    return _p0._0;} else {    return "";}}();
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.input,
      _U.list([$Html$Attributes.type$("text")
              ,$Html$Attributes.value(val)
              ,A3($Html$Events.on,
              "input",
              $Html$Events.targetValue,
              function (str) {
                 return A2($Signal.message,address,A2($Components$System.Update,str,conf.path));
              })]),
      _U.list([]))]));
   });
   return _elm.Components.Text.values = {_op: _op,view: view};
};